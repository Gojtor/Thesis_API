// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Thesis_ASP;

#nullable disable

namespace Thesis_ASP.Migrations
{
    [DbContext(typeof(TCGDbContext))]
    [Migration("20250303212049_InitialMigration")]
    partial class InitialMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Thesis_ASP.Card", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<int>("attribute")
                        .HasColumnType("int");

                    b.Property<string>("cardID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("cardName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cardType")
                        .HasColumnType("int");

                    b.Property<int>("characterType")
                        .HasColumnType("int");

                    b.Property<int>("color")
                        .HasColumnType("int");

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<string>("effect")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("power")
                        .HasColumnType("int");

                    b.Property<string>("trigger")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("Cards", (string)null);
                });

            modelBuilder.Entity("Thesis_ASP.InGameCard", b =>
                {
                    b.Property<long>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<long>("id"));

                    b.Property<bool>("active")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("attribute")
                        .HasColumnType("int");

                    b.Property<string>("cardID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("cardName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("cardType")
                        .HasColumnType("int");

                    b.Property<int>("characterType")
                        .HasColumnType("int");

                    b.Property<int>("color")
                        .HasColumnType("int");

                    b.Property<int>("cost")
                        .HasColumnType("int");

                    b.Property<int>("counter")
                        .HasColumnType("int");

                    b.Property<string>("customCardID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("effect")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("gameCustomID")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("playerName")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("power")
                        .HasColumnType("int");

                    b.Property<string>("trigger")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("id");

                    b.ToTable("InGameCards", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
